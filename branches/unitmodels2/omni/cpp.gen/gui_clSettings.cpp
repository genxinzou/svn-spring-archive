// -*- C++ -*- generated by wxGlade 0.4 on Sat Dec 31 11:17:21 2005

#include "gui_clSettings.h"


gui_clSettings::gui_clSettings(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxFrame(parent, id, title, pos, size, wxCAPTION|wxCLOSE_BOX|wxMINIMIZE_BOX|wxSYSTEM_MENU)
{
    // begin wxGlade: gui_clSettings::gui_clSettings
    notebook_clSettings_main = new wxNotebook(this, -1, wxDefaultPosition, wxDefaultSize, 0);
    notebook_clSettings_advanced = new wxPanel(notebook_clSettings_main, -1);
    notebook_clSettings_options = new wxPanel(notebook_clSettings_main, -1);
    notebook_clSettings_interface = new wxPanel(notebook_clSettings_main, -1);
    label_clsettings_colorPrefs = new wxStaticText(notebook_clSettings_interface, -1, wxT("Color Preferences"));
    label_clSettings_interface_firstColor = new wxStaticText(notebook_clSettings_interface, -1, wxT("1st Color Pick:"));
    button_clSettings_interface_firstColor = new wxButton(notebook_clSettings_interface, 103, wxT("None"));
    label_clSettings_interface_secondColor = new wxStaticText(notebook_clSettings_interface, -1, wxT("2nd Color Pick:"));
    button_clSettings_interface_secondColor = new wxButton(notebook_clSettings_interface, 104, wxT("None"));
    label_clSettings_interface_thirdColor = new wxStaticText(notebook_clSettings_interface, -1, wxT("3rd Color Pick:"));
    button_clSettings_interface_thirdColor = new wxButton(notebook_clSettings_interface, 105, wxT("None"));
    label_clSettings_textColors = new wxStaticText(notebook_clSettings_interface, -1, wxT("Text Colors"));
    label_clSettings_interface_channelText = new wxStaticText(notebook_clSettings_interface, -1, wxT("Channel Messages"));
    button_clSettings_interface_channelText = new wxButton(notebook_clSettings_interface, 106, wxT("Default"));
    label_clSettings_interface_userText = new wxStaticText(notebook_clSettings_interface, -1, wxT("User Messages"));
    button_clSettings_interface_userText = new wxButton(notebook_clSettings_interface, 107, wxT("Default"));
    label_clSettings_interface_privateText = new wxStaticText(notebook_clSettings_interface, -1, wxT("Private Messages"));
    button_clSettings_interface_privateText = new wxButton(notebook_clSettings_interface, 108, wxT("Default"));
    label_clSettings_interface_serverText = new wxStaticText(notebook_clSettings_interface, -1, wxT("Server Messages"));
    button_clSettings_interface_serverText = new wxButton(notebook_clSettings_interface, 109, wxT("Default"));
    label_clSettings_interface_debugText = new wxStaticText(notebook_clSettings_interface, -1, wxT("Debug Messages"));
    button_clSettings_interface_debugText = new wxButton(notebook_clSettings_interface, 110, wxT("Default"));
    checkbox_clSettings_options_customIcon = new wxCheckBox(notebook_clSettings_options, 301, wxT("Custom player icon"));
    text_clSettings_options_customIconPath = new wxTextCtrl(notebook_clSettings_options, -1, wxT(""));
    button_clSettings_options_findCustomIconPath = new wxButton(notebook_clSettings_options, -1, wxT("..."));
    text_clSettings_options_customIconRules = new wxTextCtrl(notebook_clSettings_options, -1, wxT("Max Size: 24x24\nMax Size on Disk: 10 kb\nFormats Supported: \npng gif jpg bmp xpm"), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);
    checkbox_clSettings_options_showCustomIcons = new wxCheckBox(notebook_clSettings_options, 302, wxT(""));
    label_clSettings_options_showCustomIcons = new wxStaticText(notebook_clSettings_options, -1, wxT("Download custom icons from the server"));
    checkbox_clSettings_options_createLanTab = new wxCheckBox(notebook_clSettings_options, 303, wxT(""));
    label_clSettings_options_createLanTab = new wxStaticText(notebook_clSettings_options, -1, wxT("Create LAN tab at startup"));
    label_clSettings_options_defaultFaction = new wxStaticText(notebook_clSettings_options, -1, wxT("Default Faction"));
    const wxString choice_clSettings_options_defaultFactionData_choices[] = {
        wxT("Random"),
        wxT("Arm"),
        wxT("Core")
    };
    choice_clSettings_options_defaultFactionData = new wxChoice(notebook_clSettings_options, -1, wxDefaultPosition, wxDefaultSize, 3, choice_clSettings_options_defaultFactionData_choices, 0);
    notebook_1_pane_2_copy = new wxPanel(notebook_clSettings_options, -1);
    checkbox_clSettings_advanced_rememberAll = new wxCheckBox(notebook_clSettings_advanced, 304, wxT(""));
    label_clSettings_advanced_rememberAll = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Remember all choices and settings"));
    checkbox_clSettings_advanced_blockPrivate = new wxCheckBox(notebook_clSettings_advanced, 305, wxT(""));
    label_clSettings_advanced_blockPrivate = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Block incoming private messages"));
    checkbox_clSettings_advanced_showDebug = new wxCheckBox(notebook_clSettings_advanced, 306, wxT(""));
    label_clSettings_advanced_showDebug = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Show all debugging messages"));
    checkbox_clSettings_advanced_donateBandwidth = new wxCheckBox(notebook_clSettings_advanced, 307, wxT(""));
    label_clSettings_advanced_donateBandwidth = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Donate bandwidth if available"));
    label_clSettings_advanced_maxUpload = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Max Upload Speed"));
    const wxString combo_clSettings_advanced_maxUpload_choices[] = {
        wxT("5"),
        wxT("10"),
        wxT("12"),
        wxT("15"),
        wxT("20"),
        wxT("25"),
        wxT("30"),
        wxT("40"),
        wxT("50")
    };
    combo_clSettings_advanced_maxUpload = new wxComboBox(notebook_clSettings_advanced, -1, wxT(""), wxDefaultPosition, wxDefaultSize, 9, combo_clSettings_advanced_maxUpload_choices, wxCB_DROPDOWN);
    label_kilobytes_copy = new wxStaticText(notebook_clSettings_advanced, -1, wxT("KB/s"));
    label_clSettings_advanced_bitPort = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Port"));
    text_clSettings_advanced_bitPortData = new wxTextCtrl(notebook_clSettings_advanced, -1, wxT("8452"));
    checkbox_clSettings_advanced_ipConfig = new wxCheckBox(notebook_clSettings_advanced, 308, wxT(""));
    label_clSettings_advanced_ipConfig = new wxStaticText(notebook_clSettings_advanced, -1, wxT("Bind sockets to a different IP"));
    text_clSettings_advanced_ipUsedData = new wxTextCtrl(notebook_clSettings_advanced, -1, wxT("192.168.0.111"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_TAB);
    button_clSettings_main_save = new wxButton(this, 101, wxT("Save Settings"));
    button_clSettings_main_revertToDefaults = new wxButton(this, 102, wxT("Revert to Defaults"));
    button_clSettings_main_done = new wxButton(this, -1, wxT("Done"));

    set_properties();
    do_layout();
    // end wxGlade
}


void gui_clSettings::set_properties()
{
    // begin wxGlade: gui_clSettings::set_properties
    SetTitle(wxT("Omni - Client Settings"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("resource/spring-redlogo.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE));
    label_clsettings_colorPrefs->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    button_clSettings_interface_firstColor->SetToolTip(wxT("When you join a battle, the game will request this color be used for you.  If it is already in use, the game will request your 2nd color pick from the server."));
    button_clSettings_interface_secondColor->SetToolTip(wxT("If your 1st color pick is already taken, the client will request that the server grant you rights to use this color.  If this color is also in use, the client will request your 3rd color pick to be used."));
    button_clSettings_interface_thirdColor->SetToolTip(wxT("Your final color pick will only be utilized if your 1st and 2nd picks are taken.  In the event that the 3rd pick is also taken, the client will randomly assign you one of the remaining colors."));
    label_clSettings_textColors->SetFont(wxFont(12, wxDEFAULT, wxNORMAL, wxBOLD, 0, wxT("")));
    button_clSettings_interface_channelText->SetForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOWTEXT));
    button_clSettings_interface_channelText->SetToolTip(wxT("When someone other than yourself sends a message to the channel, it will appear in this color."));
    button_clSettings_interface_userText->SetForegroundColour(wxColour(47, 47, 47));
    button_clSettings_interface_userText->SetToolTip(wxT("When you send a message to a chatroom, it will appear in this color."));
    button_clSettings_interface_privateText->SetForegroundColour(wxColour(35, 142, 35));
    button_clSettings_interface_privateText->SetToolTip(wxT("Messages sent to individuals from anywhere on the server are projected in this color."));
    button_clSettings_interface_serverText->SetForegroundColour(wxColour(128, 18, 18));
    button_clSettings_interface_serverText->SetToolTip(wxT("Messages from the server will be in this color."));
    button_clSettings_interface_debugText->SetForegroundColour(wxColour(0, 0, 109));
    button_clSettings_interface_debugText->SetToolTip(wxT("Messages to aid in debugging the Spring Client will be in this color."));
    checkbox_clSettings_options_customIcon->Enable(false);
    text_clSettings_options_customIconPath->SetMinSize(wxSize(200, 25));
    text_clSettings_options_customIconPath->Enable(false);
    button_clSettings_options_findCustomIconPath->SetMinSize(wxSize(40, 25));
    button_clSettings_options_findCustomIconPath->Enable(false);
    text_clSettings_options_customIconRules->SetMinSize(wxSize(265, 100));
    text_clSettings_options_customIconRules->Enable(false);
    checkbox_clSettings_options_showCustomIcons->SetValue(1);
    checkbox_clSettings_options_createLanTab->SetValue(1);
    label_clSettings_options_defaultFaction->SetMinSize(wxSize(120, 17));
    choice_clSettings_options_defaultFactionData->SetSelection(0);
    checkbox_clSettings_advanced_rememberAll->SetValue(1);
    checkbox_clSettings_advanced_donateBandwidth->Enable(false);
    label_clSettings_advanced_donateBandwidth->Enable(false);
    label_clSettings_advanced_maxUpload->Enable(false);
    combo_clSettings_advanced_maxUpload->SetMinSize(wxSize(100, 25));
    combo_clSettings_advanced_maxUpload->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_BACKGROUND));
    combo_clSettings_advanced_maxUpload->Enable(false);
    combo_clSettings_advanced_maxUpload->SetSelection(1);
    label_kilobytes_copy->Enable(false);
    label_clSettings_advanced_bitPort->Enable(false);
    text_clSettings_advanced_bitPortData->SetMinSize(wxSize(100, 25));
    text_clSettings_advanced_bitPortData->Enable(false);
    checkbox_clSettings_advanced_ipConfig->SetMinSize(wxSize(19, 19));
    text_clSettings_advanced_ipUsedData->SetMinSize(wxSize(150, 25));
    text_clSettings_advanced_ipUsedData->Enable(false);
    button_clSettings_main_save->SetDefault();
    // end wxGlade
}


void gui_clSettings::do_layout()
{
    // begin wxGlade: gui_clSettings::do_layout
    wxFlexGridSizer* grid_clsettings_main = new wxFlexGridSizer(3, 3, 0, 0);
    wxBoxSizer* sizer_clSettings_main = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_sizer_3_copy_1 = new wxFlexGridSizer(13, 1, 0, 0);
    wxFlexGridSizer* sizer_clSettings_advanced_ipUsed = new wxFlexGridSizer(1, 2, 0, 0);
    wxBoxSizer* sizer_clSettings_advanced_ipConfig = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* sizer_clSettings_advanced_bitPort_notNeeded = new wxFlexGridSizer(1, 1, 0, 0);
    wxBoxSizer* sizer_clSettings_advanced_bitPort = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* sizer_clSettings_advanced_maxUpload = new wxFlexGridSizer(1, 5, 0, 0);
    wxBoxSizer* sizer_clSettings_advanced_donateBandwidth = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_advanced_showDebug = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_advanced_blockPrivate = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_advanced_rememberAll = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* grid_clSettings_options = new wxFlexGridSizer(16, 1, 0, 0);
    wxBoxSizer* sizer_clSettings_options_defaultFaction = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_1_copy = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_1_copy_copy_1 = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_clSettings_options_createLanTab = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_options_showCustomIcons = new wxBoxSizer(wxHORIZONTAL);
    wxFlexGridSizer* sizer_5_copy = new wxFlexGridSizer(1, 2, 0, 0);
    wxFlexGridSizer* sizer_clSettings_options_iconPath = new wxFlexGridSizer(1, 3, 0, 0);
    wxFlexGridSizer* grid_clSettings_interface = new wxFlexGridSizer(6, 1, 0, 0);
    wxBoxSizer* sizer_clSettings_interface_colors = new wxBoxSizer(wxVERTICAL);
    wxBoxSizer* sizer_clSettings_interface_debugText = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_serverText = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_privateText = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_userText = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_channelText = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_thirdColor = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_secondColor = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_clSettings_interface_firstColor = new wxBoxSizer(wxHORIZONTAL);
    grid_clsettings_main->Add(10, 350, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(label_clsettings_colorPrefs, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_clSettings_interface_firstColor->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_firstColor->Add(label_clSettings_interface_firstColor, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_firstColor->Add(94, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_firstColor->Add(button_clSettings_interface_firstColor, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_firstColor, 1, wxEXPAND, 0);
    sizer_clSettings_interface_secondColor->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_secondColor->Add(label_clSettings_interface_secondColor, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_secondColor->Add(90, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_secondColor->Add(button_clSettings_interface_secondColor, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_secondColor, 1, wxEXPAND, 0);
    sizer_clSettings_interface_thirdColor->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_thirdColor->Add(label_clSettings_interface_thirdColor, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_thirdColor->Add(93, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_thirdColor->Add(button_clSettings_interface_thirdColor, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_thirdColor, 1, wxEXPAND, 0);
    sizer_clSettings_interface_colors->Add(200, 20, 0, 0, 0);
    sizer_clSettings_interface_colors->Add(label_clSettings_textColors, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_clSettings_interface_channelText->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_channelText->Add(label_clSettings_interface_channelText, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_channelText->Add(66, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_channelText->Add(button_clSettings_interface_channelText, 0, wxADJUST_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_channelText, 1, wxEXPAND, 0);
    sizer_clSettings_interface_userText->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_userText->Add(label_clSettings_interface_userText, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_userText->Add(88, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_userText->Add(button_clSettings_interface_userText, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_userText, 1, wxEXPAND, 0);
    sizer_clSettings_interface_privateText->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_privateText->Add(label_clSettings_interface_privateText, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_privateText->Add(74, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_privateText->Add(button_clSettings_interface_privateText, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_privateText, 1, wxEXPAND, 0);
    sizer_clSettings_interface_serverText->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_serverText->Add(label_clSettings_interface_serverText, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_serverText->Add(76, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_serverText->Add(button_clSettings_interface_serverText, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_serverText, 1, wxEXPAND, 0);
    sizer_clSettings_interface_debugText->Add(20, 20, 0, 0, 0);
    sizer_clSettings_interface_debugText->Add(label_clSettings_interface_debugText, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_debugText->Add(76, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_debugText->Add(button_clSettings_interface_debugText, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_interface_colors->Add(sizer_clSettings_interface_debugText, 1, wxEXPAND, 0);
    grid_clSettings_interface->Add(sizer_clSettings_interface_colors, 1, 0, 0);
    grid_clSettings_interface->Add(100, 15, 0, 0, 0);
    notebook_clSettings_interface->SetAutoLayout(true);
    notebook_clSettings_interface->SetSizer(grid_clSettings_interface);
    grid_clSettings_interface->Fit(notebook_clSettings_interface);
    grid_clSettings_interface->SetSizeHints(notebook_clSettings_interface);
    grid_clSettings_options->Add(checkbox_clSettings_options_customIcon, 0, 0, 0);
    grid_clSettings_options->Add(200, 5, 0, 0, 0);
    sizer_clSettings_options_iconPath->Add(14, 20, 0, 0, 0);
    sizer_clSettings_options_iconPath->Add(text_clSettings_options_customIconPath, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_options_iconPath->Add(button_clSettings_options_findCustomIconPath, 0, wxFIXED_MINSIZE, 0);
    grid_clSettings_options->Add(sizer_clSettings_options_iconPath, 1, wxEXPAND, 0);
    grid_clSettings_options->Add(200, 5, 0, 0, 0);
    sizer_5_copy->Add(14, 20, 0, 0, 0);
    sizer_5_copy->Add(text_clSettings_options_customIconRules, 0, wxFIXED_MINSIZE, 0);
    grid_clSettings_options->Add(sizer_5_copy, 1, 0, 0);
    grid_clSettings_options->Add(200, 10, 0, 0, 0);
    sizer_clSettings_options_showCustomIcons->Add(checkbox_clSettings_options_showCustomIcons, 0, 0, 0);
    sizer_clSettings_options_showCustomIcons->Add(20, 20, 0, 0, 0);
    sizer_clSettings_options_showCustomIcons->Add(label_clSettings_options_showCustomIcons, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_1_copy->Add(sizer_clSettings_options_showCustomIcons, 1, wxEXPAND, 0);
    sizer_clSettings_options_createLanTab->Add(checkbox_clSettings_options_createLanTab, 0, 0, 0);
    sizer_clSettings_options_createLanTab->Add(20, 20, 0, 0, 0);
    sizer_clSettings_options_createLanTab->Add(label_clSettings_options_createLanTab, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_1_copy_copy_1->Add(sizer_clSettings_options_createLanTab, 1, wxEXPAND, 0);
    sizer_1_copy->Add(sizer_1_copy_copy_1, 1, 0, 0);
    grid_clSettings_options->Add(sizer_1_copy, 1, 0, 0);
    grid_clSettings_options->Add(200, 5, 0, 0, 0);
    sizer_clSettings_options_defaultFaction->Add(label_clSettings_options_defaultFaction, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_options_defaultFaction->Add(choice_clSettings_options_defaultFactionData, 0, 0, 0);
    grid_clSettings_options->Add(sizer_clSettings_options_defaultFaction, 1, wxEXPAND, 0);
    grid_clSettings_options->Add(notebook_1_pane_2_copy, 0, 0, 0);
    notebook_clSettings_options->SetAutoLayout(true);
    notebook_clSettings_options->SetSizer(grid_clSettings_options);
    grid_clSettings_options->Fit(notebook_clSettings_options);
    grid_clSettings_options->SetSizeHints(notebook_clSettings_options);
    sizer_clSettings_advanced_rememberAll->Add(checkbox_clSettings_advanced_rememberAll, 0, 0, 0);
    sizer_clSettings_advanced_rememberAll->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_rememberAll->Add(label_clSettings_advanced_rememberAll, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_rememberAll, 1, wxEXPAND, 0);
    grid_sizer_3_copy_1->Add(100, 5, 0, 0, 0);
    sizer_clSettings_advanced_blockPrivate->Add(checkbox_clSettings_advanced_blockPrivate, 0, 0, 0);
    sizer_clSettings_advanced_blockPrivate->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_blockPrivate->Add(label_clSettings_advanced_blockPrivate, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_blockPrivate, 1, wxEXPAND, 0);
    grid_sizer_3_copy_1->Add(100, 5, 0, 0, 0);
    sizer_clSettings_advanced_showDebug->Add(checkbox_clSettings_advanced_showDebug, 0, 0, 0);
    sizer_clSettings_advanced_showDebug->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_showDebug->Add(label_clSettings_advanced_showDebug, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_showDebug, 1, wxEXPAND, 0);
    grid_sizer_3_copy_1->Add(100, 5, 0, 0, 0);
    sizer_clSettings_advanced_donateBandwidth->Add(checkbox_clSettings_advanced_donateBandwidth, 0, 0, 0);
    sizer_clSettings_advanced_donateBandwidth->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_donateBandwidth->Add(label_clSettings_advanced_donateBandwidth, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_donateBandwidth, 1, wxEXPAND, 0);
    sizer_clSettings_advanced_maxUpload->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_maxUpload->Add(label_clSettings_advanced_maxUpload, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_clSettings_advanced_maxUpload->Add(36, 20, 0, 0, 0);
    sizer_clSettings_advanced_maxUpload->Add(combo_clSettings_advanced_maxUpload, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_advanced_maxUpload->Add(label_kilobytes_copy, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_maxUpload, 1, 0, 0);
    sizer_clSettings_advanced_bitPort->Add(21, 20, 0, 0, 0);
    sizer_clSettings_advanced_bitPort->Add(label_clSettings_advanced_bitPort, 0, wxEXPAND, 0);
    sizer_clSettings_advanced_bitPort->Add(90, 20, 0, wxEXPAND, 0);
    sizer_clSettings_advanced_bitPort->Add(text_clSettings_advanced_bitPortData, 0, wxEXPAND, 0);
    sizer_clSettings_advanced_bitPort_notNeeded->Add(sizer_clSettings_advanced_bitPort, 1, wxEXPAND, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_bitPort_notNeeded, 1, 0, 0);
    grid_sizer_3_copy_1->Add(100, 5, 0, 0, 0);
    sizer_clSettings_advanced_ipConfig->Add(checkbox_clSettings_advanced_ipConfig, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_clSettings_advanced_ipConfig->Add(20, 20, 0, 0, 0);
    sizer_clSettings_advanced_ipConfig->Add(label_clSettings_advanced_ipConfig, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_ipConfig, 1, wxEXPAND, 0);
    sizer_clSettings_advanced_ipUsed->Add(26, 20, 0, 0, 0);
    sizer_clSettings_advanced_ipUsed->Add(text_clSettings_advanced_ipUsedData, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_advanced_ipUsed->AddGrowableCol(1);
    grid_sizer_3_copy_1->Add(sizer_clSettings_advanced_ipUsed, 3, 0, 0);
    notebook_clSettings_advanced->SetAutoLayout(true);
    notebook_clSettings_advanced->SetSizer(grid_sizer_3_copy_1);
    grid_sizer_3_copy_1->Fit(notebook_clSettings_advanced);
    grid_sizer_3_copy_1->SetSizeHints(notebook_clSettings_advanced);
    notebook_clSettings_main->AddPage(notebook_clSettings_interface, wxT("Interface"));
    notebook_clSettings_main->AddPage(notebook_clSettings_options, wxT("Options"));
    notebook_clSettings_main->AddPage(notebook_clSettings_advanced, wxT("Advanced"));
    grid_clsettings_main->Add(notebook_clSettings_main, 1, wxEXPAND, 0);
    grid_clsettings_main->Add(10, 350, 0, wxFIXED_MINSIZE, 0);
    grid_clsettings_main->Add(10, 20, 0, wxFIXED_MINSIZE, 0);
    sizer_clSettings_main->Add(button_clSettings_main_save, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_clSettings_main->Add(button_clSettings_main_revertToDefaults, 0, wxALIGN_CENTER_HORIZONTAL, 0);
    sizer_clSettings_main->Add(button_clSettings_main_done, 0, wxLEFT|wxEXPAND|wxFIXED_MINSIZE, 6);
    grid_clsettings_main->Add(sizer_clSettings_main, 1, wxALIGN_CENTER_HORIZONTAL, 0);
    grid_clsettings_main->Add(10, 20, 0, wxFIXED_MINSIZE, 0);
    grid_clsettings_main->Add(10, 10, 0, wxFIXED_MINSIZE, 0);
    grid_clsettings_main->Add(300, 10, 0, wxFIXED_MINSIZE, 0);
    grid_clsettings_main->Add(10, 10, 0, wxFIXED_MINSIZE, 0);
    SetAutoLayout(true);
    SetSizer(grid_clsettings_main);
    grid_clsettings_main->Fit(this);
    grid_clsettings_main->SetSizeHints(this);
    Layout();
    Centre();
    // end wxGlade
}

