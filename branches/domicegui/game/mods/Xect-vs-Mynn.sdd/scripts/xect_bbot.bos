#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare, flash, base, body, lthigh, rthigh, turret, barrel,
       top, stub, torso;

static-var  bMoving, bAiming, Static_Var_3;

// Signal definitions
#define SIG_AIM				4
#define SMOKEPIECE			base
#include "smokeunit.h"

Walkaim()
{
	if( TRUE )
	{
		move lthigh to y-axis [-1.] speed [1.];
		turn lthigh to x-axis <1.> speed <1.>;
		move lthigh to z-axis [-1.] speed [1.];
		turn lthigh to z-axis <1.> speed <1.>;
		turn body to z-axis <-1.> speed <1.>;
		wait-for-turn lthigh around x-axis;
		turn lthigh to x-axis <-1.> speed <1.>;
		move lthigh to y-axis [1.] speed [1.];
		move lthigh to z-axis [-1.] speed [1.];
		wait-for-move lthigh along y-axis;
		move lthigh to y-axis [-1.] speed [1.];
		wait-for-turn lthigh around x-axis;
		turn lthigh to z-axis <-1.> speed <1.>;
		turn lthigh to x-axis <-1.> speed <1.>;
		sleep 100;
		if( TRUE )
		{
			move rthigh to y-axis [-1.] speed [1.];
			turn rthigh to x-axis <1.> speed <1.>;
			move rthigh to z-axis [-1.] speed [1.];
			turn rthigh to z-axis <-1.> speed <1.>;
			turn body to z-axis <1.> speed <1.>;
			wait-for-turn rthigh around x-axis;
			turn rthigh to x-axis <-1.> speed <1.>;
			move rthigh to y-axis [1.] speed [1.];
			move rthigh to z-axis [-1.] speed [1.];
			wait-for-move rthigh along y-axis;
			move rthigh to y-axis [-1.] speed [1.];
			wait-for-turn rthigh around x-axis;
			turn rthigh to z-axis <-1.> speed <1.>;
			turn rthigh to x-axis <-1.> speed <1.>;
			sleep 100;
			return (0);
		}
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script Walkaim();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script Walkaim();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				turn body to z-axis <-1.> speed <1.>;
				turn rthigh to x-axis <-1.> speed <1.>;
				move rthigh to y-axis [-1.] speed [1.];
				move rthigh to z-axis [-1.] speed [1.];
				turn lthigh to x-axis <-1.> speed <1.>;
				move lthigh to y-axis [-1.] speed [1.];
				move lthigh to z-axis [-1.] speed [1.];
				if( !aiming )
				{
					turn torso to y-axis <-1.> speed <1.>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide flash;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	start-script SmokeUnit();
	start-script MotionControl();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

RestoreAfterDelay()
{
	sleep 2250;
	turn body to z-axis <-1.> speed <1.>;
	turn turret to y-axis <-1.> speed <1.>;
	turn turret to x-axis <-1.> speed <1.>;
	bAiming = FALSE;
}

FirePrimary()
{
	show flash;
	move barrel to z-axis [-1.] speed [1.];
	sleep 250;
	hide flash;
	move barrel to z-axis [-1.] speed [1.];
}

AimFromPrimary(piecenum)
{
	piecenum = barrel;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

AimPrimary(heading, pitch)
{
	sleep 150;
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn turret to y-axis heading speed <1.>;
	turn turret to x-axis <-1.> - pitch speed <1.>;
	wait-for-turn turret around y-axis;
	wait-for-turn turret around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode torso type BITMAPONLY | BITMAP1;
}
