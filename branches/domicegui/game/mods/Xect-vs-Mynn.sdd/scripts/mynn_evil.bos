#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  front, back, base, smoke1, smoke2;

static-var  gun_1, bMoving, Static_Var_3, Static_Var_4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Hover()
{
	if( TRUE )
	{
		emit-sfx 257 from smoke1;
		emit-sfx 257 from smoke2;
		sleep 1000;
		if( TRUE )
		{
			emit-sfx 257 from smoke1;
			emit-sfx 257 from smoke2;
			sleep 1000;
			return (0);
		}
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			move front to z-axis [0.] speed [30.];
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script Hover();
			}
			if( !Func_Var_2 )
			{
				Static_Var_4 = 0;
				call-script Hover();
			}
		}
		if( !Func_Var_1 )
		{
			move front to z-axis [-3.] speed [30.];
			Static_Var_4 = 1;
			sleep 200;
		}
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	start-script SmokeUnit();
	start-script MotionControl();
	move front to z-axis [-3.] speed [30.];
	gun_1 = front;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

FirePrimary()
{
	move front to z-axis [-2.] speed [100.];
	sleep 100;
	move front to z-axis [0.] speed [30.];
	gun_1 = !gun_1;
}

QueryPrimary(piecenum)
{
	piecenum = front;
}

StartMoving()
{
	move front to z-axis [0.] speed [30.];
	bMoving = TRUE;
}

StopMoving()
{
	move front to z-axis [-3.] speed [30.];
	bMoving = FALSE;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode front type BITMAPONLY | BITMAP1;
		explode back type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode front type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode back type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode front type SHATTER | BITMAP5;
		explode back type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode front type BITMAPONLY | BITMAP1;
}
