#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, stem, leaf1, leaf2, stump, bottom,
       xrod;

static-var  Static_Var_1, Static_Var_2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

Go()
{
	spin stem around y-axis speed <1.> accelerate <1.>;
	spin xrod around x-axis speed <1.> accelerate <1.>;
}

Stop()
{
}

InitState()
{
	Static_Var_1 = 1;
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( Static_Var_2 )
	{
		Static_Var_1 = requestedstate;
		return (0);
	}
	Static_Var_2 = 1;
	currentstate = Static_Var_1;
	Static_Var_1 = requestedstate;
	while( Static_Var_1 != currentstate )
	{
		if( Static_Var_1 == 0 )
		{
			call-script Go();
			currentstate = 0;
		}
		if( Static_Var_1 == 1 )
		{
			call-script Stop();
			currentstate = 1;
		}
	}
	Static_Var_2 = 0;
}

Create()
{
	dont-cache leaf1;
	dont-shade leaf1;
	dont-cache leaf2;
	dont-shade leaf2;
	dont-cache stump;
	dont-shade stump;
	dont-shade bottom;
	call-script InitState();
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
	call-script Go();
}

Deactivate()
{
	start-script RequestState(1);
	call-script Stop();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed( severity, corpsetype )
	{
	if (severity <= 25)
		{
		corpsetype = 1;
		explode leaf2 type	BITMAPONLY | BITMAP1;
		explode leaf1 type	BITMAPONLY | BITMAP2;
		explode stem type	BITMAPONLY | BITMAP3;
		}

	if (severity <= 50)
		{
		corpsetype = 2;
		explode leaf2 type	BITMAPONLY | BITMAP1;
		explode leaf1 type	FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode stem type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	if (severity <= 99)
		{
		corpsetype = 3;
		explode leaf2 type	BITMAPONLY | BITMAP1;
		explode leaf1 type	SHATTER | BITMAP2;
		explode stem type	BITMAPONLY | BITMAP3;
		return( 0 );
		}

	corpsetype = 3;
	explode leaf2 type	BITMAPONLY | BITMAP1;
	explode leaf1 type	SHATTER | BITMAP2;
	explode stem type	BITMAPONLY | BITMAP3;
	return( 0 );
	}
