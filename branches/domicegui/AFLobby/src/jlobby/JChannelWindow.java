/*
 * JChannelWindow.java
 *
 * Created on 30 May 2006, 21:31
 */

package jlobby;

import java.awt.Component;
import java.awt.event.KeyEvent;
import java.util.*;
import javax.swing.DefaultListModel;


/**
 *
 * @author  AF
 */

public class JChannelWindow extends javax.swing.JFrame {
    public java.awt.Point origin= new java.awt.Point();
    public String lastsent = "n/a";
    public JConnection jc;
    String Channel = "";
    LMain LM;
    DefaultListModel listModel;
    SortedListModel SListModel;
    
    /** Creates new form JChannelWindow */
    public JChannelWindow() {
        initComponents();
        listModel = new DefaultListModel();
         SListModel = new SortedListModel(listModel);
        jList1.setModel(SListModel);
    }
    public void Init(LMain L, String channel, JConnection c){
        LM = L;
        Channel = channel;
        jc = c;
        jLabel1.setText(channel + " :: " + c.server);
        //
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel2 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jChat = new javax.swing.JTextArea();

        setTitle("Channel :: Server");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);
        setUndecorated(true);
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jLabel1.setFont(new java.awt.Font("Arial", 1, 11));
        jLabel1.setText("Channel :: Server");

        jButton1.setText("X");
        jButton1.setBorderPainted(false);
        jButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jButton1.setOpaque(false);
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton1MousePressed(evt);
            }
        });

        jSplitPane2.setDividerLocation(430);
        jSplitPane2.setForeground(java.awt.Color.white);
        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setOneTouchExpandable(true);
        jToolBar1.setFloatable(false);
        jToolBar1.setBorderPainted(false);
        jButton2.setFont(new java.awt.Font("Arial", 0, 11));
        jButton2.setText("SpellCheck");
        jButton2.setBorderPainted(false);
        jButton2.setOpaque(false);
        jToolBar1.add(jButton2);

        jToggleButton1.setFont(new java.awt.Font("Arial", 0, 11));
        jToggleButton1.setSelected(true);
        jToggleButton1.setText("Accumulate Messages");
        jToggleButton1.setBorderPainted(false);
        jToolBar1.add(jToggleButton1);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Arial", 0, 13));
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(1);
        jTextArea1.setWrapStyleWord(true);
        jTextArea1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextArea1KeyPressed(evt);
            }
        });

        jScrollPane3.setViewportView(jTextArea1);

        jButton3.setText("Send");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jButton3MousePressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 706, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 659, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButton3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .add(jToolBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jButton3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)))
        );
        jSplitPane2.setRightComponent(jPanel2);

        jSplitPane1.setDividerLocation(620);
        jSplitPane1.setOneTouchExpandable(true);
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jList1MousePressed(evt);
            }
        });

        jScrollPane2.setViewportView(jList1);

        jSplitPane1.setRightComponent(jScrollPane2);

        jChat.setColumns(20);
        jChat.setEditable(false);
        jChat.setFont(new java.awt.Font("Arial", 0, 13));
        jChat.setLineWrap(true);
        jChat.setRows(5);
        jChat.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jChat);

        jSplitPane1.setLeftComponent(jScrollPane1);

        jSplitPane2.setTopComponent(jSplitPane1);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 654, Short.MAX_VALUE)
                        .add(jButton1))
                    .add(jSplitPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 759, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jButton1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jSplitPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 542, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 770, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
        );
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextArea1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextArea1KeyPressed
// TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(evt.getModifiers() == evt.SHIFT_MASK) return;
            String lines[] = jTextArea1.getText().split("\n");
            for(int n = 0; n <lines.length; n++){
                String command[] = lines[n].split(" ");
                if(command[0].equalsIgnoreCase("/me")){
                    jc.SendLine("SAYEX " + Channel + " " + Misc.makeSentence(command,1));
                }else{
                    jc.SendLine("SAY " + Channel + " " + lines[n]);
                }
            }
            jTextArea1.setText("");
            jTextArea1.grabFocus();
        }
    }//GEN-LAST:event_jTextArea1KeyPressed

    private void jList1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MousePressed
// TODO add your handling code here:
        String n = (String)jList1.getSelectedValue();
        JEvent e = new JEvent();
        e.connection = null;
        e.data = new String[2];
        e.data[0] = "OPENPRIV";
        e.data[1] = n;
        LM.NewGUIEvent(e);
    }//GEN-LAST:event_jList1MousePressed

    private void jButton3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MousePressed
        String lines[] = jTextArea1.getText().split("\n");
        for(int n = 0; n <lines.length; n++){
            String command[] = lines[n].split(" ");
            if(command[0].equalsIgnoreCase("/me")){
                jc.SendLine("SAYEX " + Channel + " " + Misc.makeSentence(command,1));
            }else{
                jc.SendLine("SAY " + Channel + " " + lines[n]);
            }
        }
        jTextArea1.setText("");
        jTextArea1.grabFocus();
    }//GEN-LAST:event_jButton3MousePressed

    private void jButton1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MousePressed
// TODO add your handling code here:
        JEvent e = new JEvent();
        e.connection =jc;
        e.data = new String[2];
        e.data[0] = "LEFTCHANNEL";
        e.data[1] = Channel;
        LM.NewEvent(e);
        jc.SendLine("LEAVE "+ Channel);
        ClearPlayers();
        jChat.setText("");
    }//GEN-LAST:event_jButton1MousePressed
    public void AddMessage(String s){
        //
        jChat.append(s + "\n");
        jChat.setCaretPosition(jChat.getText().length());
    }
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        origin.x = evt.getX();
        origin.y = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        java.awt.Point p = getLocation();
        setLocation(
        p.x + evt.getX() - origin.x, 
        p.y + evt.getY() - origin.y);
    }//GEN-LAST:event_formMouseDragged
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JChannelWindow().setVisible(true);
            }
        });
    }
    void Update(){
        //
    }
    void NewEvent(JEvent e){
        if(e.connection == jc){
            if(e.data[0].equalsIgnoreCase("SAID")){
                if(e.data[1].equalsIgnoreCase(Channel)){
                    // Add!!!!!
                    String Msg = Misc.makeSentence(e.data,3);
                    String User = e.data[2];
                    if(lastsent.equalsIgnoreCase(User)){
                        if(jToggleButton1.isSelected()){
                            AddMessage("  " + Msg);
                        }else{
                            AddMessage(User + " Says:");
                            AddMessage("  " + Msg);
                            lastsent = User;
                        }
                    }else if(lastsent.equalsIgnoreCase("")){
                        AddMessage(User + " Says:");
                        AddMessage("  " + Msg);
                        lastsent = User;
                    }else if(lastsent.equalsIgnoreCase(User)==false){
                        AddMessage(User + " Says:");
                        AddMessage("  " + Msg);
                        lastsent = User;
                    }
                }
            }else if(e.data[0].equalsIgnoreCase("SAIDEX")){
                if(e.data[1].equalsIgnoreCase(Channel)){
                // Add!!!!! SAIDEX main w00t heheh
                    AddMessage("* " + e.data[2] + " " + Misc.makeSentence(e.data,3));
                }
            }else if(e.data[0].equalsIgnoreCase("LEFT")){
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    RemovePlayer(e.data[2]);
                    //AddMessage(e.data[2] + " has left #" + Channel + " (" +  Misc.makeSentence(e.data,4) + ")");
                }
                lastsent="";
            }else if(e.data[0].equalsIgnoreCase("JOIN")){
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    setVisible(true);
                }
            }else if(e.data[0].equalsIgnoreCase("JOINED")){// 
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    AddPlayer(e.data[2],false);
                }
                lastsent="";
            }else if(e.data[0].equalsIgnoreCase("CLIENTS")){
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    int c = 2;
                    while(c < e.data.length-1){
                        //listModel.addElement(e.data[c]);
                        AddPlayer(e.data[c],true);
                        c++;
                    }
                }
            }else if(e.data[0].equalsIgnoreCase("CHANNELTOPIC")){
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    AddMessage("Topic : " +Misc.makeSentence(e.data,3));
                }
                lastsent="";
            }else if(e.data[0].equalsIgnoreCase("CHANNELMESSAGE")){
                // Add!!!!!
                if(e.data[1].equalsIgnoreCase(Channel)){
                    AddMessage("ChannelMessage : " +Misc.makeSentence(e.data,2));
                }
            }
        }
    }
    void RemovePlayer(String player){
        listModel.removeElement(player);
        players.remove(player);
        AddMessage(player + " has Left #" + Channel);
    }
    void ClearPlayers(){
        players.clear();
        listModel.clear();
    }
    ArrayList<String> players = new ArrayList<String>();
    void AddPlayer(String player,boolean JustJoined){
        //
        listModel.addElement(player);
        if(JustJoined == false){
            AddMessage(player + " has Joined #" + Channel);
        }
       // if(players.contains(player)==false){
            players.add(player);
        //}
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JTextArea jChat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    
}
