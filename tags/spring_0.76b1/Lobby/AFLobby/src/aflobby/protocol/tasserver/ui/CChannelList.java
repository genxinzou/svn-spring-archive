/*
 * CChannelList.java
 *
 * Created on 30 December 2007, 05:04
 */

package aflobby.protocol.tasserver.ui;

import aflobby.CChannelInfo;
import aflobby.CChannelTableModel;
import aflobby.CEvent;
import aflobby.LMain;
import aflobby.Misc;
import aflobby.UI.CView;
import java.lang.reflect.InvocationTargetException;
import java.util.TreeMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author  tarendai
 */
public class CChannelList extends CView {
    
    CChannelTableModel channeltablemodel = null;
    TableRowSorter<CChannelTableModel> channeltablesorter = null;
    
    TreeMap<String, CChannelInfo> channeldata = new TreeMap<String,CChannelInfo>();
    
    /** Creates new form CChannelList
     * @param L 
     */
    public CChannelList(LMain L) {
        
        LM = L;
        
        Runnable doWorkRunnable = new Runnable() {

            public void run() {
                channeltablemodel = new CChannelTableModel(LM);
                channeltablesorter = new TableRowSorter<CChannelTableModel>(channeltablemodel);

                initComponents();

                ChannelTable.getColumnModel().getColumn(0).setMaxWidth(50);
                ChannelTable.getColumnModel().getColumn(1).setMaxWidth(150);
                ChannelTable.getColumnModel().getColumn(2).setMaxWidth(50);
            }
        };
        
        if(SwingUtilities.isEventDispatchThread()){
            SwingUtilities.invokeLater(doWorkRunnable);
        }else{
            try {
                SwingUtilities.invokeAndWait(doWorkRunnable);
            } catch (InterruptedException ex) {
                Logger.getLogger(CChannelList.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InvocationTargetException ex) {
                Logger.getLogger(CChannelList.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
    }
    
    @Override
    public void NewEvent(final CEvent e){
        //
         if (e.IsEvent("CHANNEL")) {
            String cname = e.data[1];
            if(channeldata.containsKey(cname)){
                //
                CChannelInfo i = channeldata.get(cname);
                i.setUsercount(Integer.parseInt(e.data[2]));
                i.setTopic(Misc.makeSentence(e.data, 3));
            }else{
                final CChannelInfo i = new CChannelInfo(e.data[1],Integer.parseInt(e.data[2]),Misc.makeSentence(e.data, 3));
                channeldata.put(cname, i);
                Runnable doWorkRunnable = new Runnable() {
                    public void run() {
                        channeltablemodel.AddChannel(i);
                    }
                };
                SwingUtilities.invokeLater(doWorkRunnable);
            }

        } else if (e.data[0].equalsIgnoreCase("ENDOFCHANNELS") == true) {
            Runnable doWorkRunnable = new Runnable() {
                public void run() {
                    channeltablemodel.fireTableDataChanged();
                    ChanRefreshButton.setEnabled(true);
                }
            };
            SwingUtilities.invokeLater(doWorkRunnable);
        } else if (e.data[0].equalsIgnoreCase("LOGININFOEND") == true) {
            LM.protocol.SendTraffic("CHANNELS");
        }
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane5 = new javax.swing.JScrollPane();
        ChannelTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        ChanRefreshButton = new javax.swing.JButton();

        ChannelTable.setModel(channeltablemodel);
        ChannelTable.setRowSorter(channeltablesorter);
        ChannelTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ChannelTableMousePressed(evt);
            }
        });
        jScrollPane5.setViewportView(ChannelTable);

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("aflobby/languages"); // NOI18N
        jLabel13.setText(bundle.getString("CChannelView.jLabel13.text")); // NOI18N

        ChanRefreshButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/UI/arrow_refresh.png"))); // NOI18N
        ChanRefreshButton.setText(bundle.getString("CChannelView.ChanRefreshButton.text")); // NOI18N
        ChanRefreshButton.setEnabled(false);
        ChanRefreshButton.setMargin(new java.awt.Insets(2, 6, 2, 6));
        ChanRefreshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChanRefreshButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 515, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 495, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ChanRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 248, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChanRefreshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void ChannelTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ChannelTableMousePressed
        if (evt.getClickCount() > 1) {
            String n = (String) ChannelTable.getValueAt(ChannelTable.getSelectedRow(), 1);
            if(n == null){
                return;
            }
            LM.protocol.JoinChannel(n, "");
        }
    }//GEN-LAST:event_ChannelTableMousePressed

    private void ChanRefreshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChanRefreshButtonActionPerformed
        LM.protocol.SendTraffic("CHANNELS");
        Runnable doWorkRunnable = new Runnable() {
            public void run() {
                ChanRefreshButton.setEnabled(false);
            }
        };
        SwingUtilities.invokeLater(doWorkRunnable);
    }//GEN-LAST:event_ChanRefreshButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChanRefreshButton;
    private javax.swing.JTable ChannelTable;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JScrollPane jScrollPane5;
    // End of variables declaration//GEN-END:variables
    
}
