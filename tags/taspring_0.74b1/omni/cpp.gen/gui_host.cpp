// -*- C++ -*- generated by wxGlade 0.4 on Sat Dec 31 11:17:21 2005

#include "gui_host.h"


gui_host::gui_host(wxWindow* parent, int id, const wxString& title, const wxPoint& pos, const wxSize& size, long style):
    wxDialog(parent, id, title, pos, size, wxDEFAULT_DIALOG_STYLE)
{
    // begin wxGlade: gui_host::gui_host
    label_host_server_name = new wxStaticText(this, -1, wxT("Battle Name"));
    text_host_server_nameData = new wxTextCtrl(this, 201, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PROCESS_TAB);
    label_host_server_modType = new wxStaticText(this, -1, wxT("Mod"));
    const wxString choice_host_server_modData_choices[] = {
        wxT("Spring - v0.51b1"),
        wxT("")
    };
    choice_host_server_modData = new wxChoice(this, -1, wxDefaultPosition, wxDefaultSize, 2, choice_host_server_modData_choices, 0);
    label_host_server_port = new wxStaticText(this, -1, wxT("Port"));
    text_host_server_portData = new wxTextCtrl(this, 202, wxT("8452"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PROCESS_TAB);
    checkbox_host_server_privateGameData = new wxCheckBox(this, 301, wxT("Private Game"));
    checkbox_host_server_lanGameData = new wxCheckBox(this, 302, wxT("Lan Game"));
    label_host_server_maxPlayers = new wxStaticText(this, -1, wxT("Max Players"));
    slider_host_server_maxPlayersData = new wxSlider(this, -1, 2, 2, 12, wxDefaultPosition, wxDefaultSize, wxSL_HORIZONTAL|wxSL_AUTOTICKS);
    label_host_battle_maxUnitsData_copy = new wxStaticText(this, -1, wxT("2"));
    label_host_server_maxUnits = new wxStaticText(this, -1, wxT("Max Units"));
    text_host_server_maxUnitsData = new wxTextCtrl(this, 203, wxT("300"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PROCESS_TAB);
    label_host_server_startEnergy = new wxStaticText(this, -1, wxT("Start Energy"));
    text_host_server_startEnergyData = new wxTextCtrl(this, 204, wxT("1000"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PROCESS_TAB);
    label_host_server_startMetal = new wxStaticText(this, -1, wxT("Start Metal"));
    text_host_server_startMetalData = new wxTextCtrl(this, 205, wxT("1000"), wxDefaultPosition, wxDefaultSize, wxTE_PROCESS_ENTER|wxTE_PROCESS_TAB);
    button_host_server_ok = new wxButton(this, 101, wxT("OK"));
    button_host_server_cancel = new wxButton(this, 102, wxT("Cancel"));
    button_host_server_testHost = new wxButton(this, 103, wxT("Test"));
    bitmap_host_map_preview = new wxStaticBitmap(this, -1, wxBitmap(wxT("resource/minimap-placeholder.png"), wxBITMAP_TYPE_ANY));
    const wxString choice_host_map_mapData_choices[] = {
        wxT("FloodedDesert - 10x10"),
        wxT("")
    };
    choice_host_map_mapData = new wxChoice(this, -1, wxDefaultPosition, wxDefaultSize, 2, choice_host_map_mapData_choices, 0);
    label_host_map_description_copy_2_copy_copy = new wxStaticText(this, -1, wxT("Description:"));
    text_host_map_description = new wxTextCtrl(this, -1, wxT(""), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_AUTO_URL);

    set_properties();
    do_layout();
    // end wxGlade
}


void gui_host::set_properties()
{
    // begin wxGlade: gui_host::set_properties
    SetTitle(wxT("Spring - Host Battle"));
    wxIcon _icon;
    _icon.CopyFromBitmap(wxBitmap(wxT("resource/spring-redlogo.png"), wxBITMAP_TYPE_ANY));
    SetIcon(_icon);
    label_host_server_name->SetMinSize(wxSize(92, 17));
    text_host_server_nameData->SetMinSize(wxSize(150, 25));
    text_host_server_nameData->SetToolTip(wxT("The name of the battle that will show up on the battle list in the lobby"));
    label_host_server_modType->SetMinSize(wxSize(77, 17));
    choice_host_server_modData->SetMinSize(wxSize(150, 25));
    choice_host_server_modData->SetSelection(0);
    label_host_server_port->SetMinSize(wxSize(77, 17));
    text_host_server_portData->SetMinSize(wxSize(150, 25));
    text_host_server_portData->SetToolTip(wxT("Enter the port that the game will use to accept incoming connections"));
    checkbox_host_server_privateGameData->SetToolTip(wxT("Private games do not show up on the server list"));
    checkbox_host_server_lanGameData->SetToolTip(wxT("Lan games show up in the lan tab of your client (if it is enabled)"));
    label_host_server_maxPlayers->SetMinSize(wxSize(77, 17));
    slider_host_server_maxPlayersData->SetMinSize(wxSize(130, 35));
    slider_host_server_maxPlayersData->SetToolTip(wxT("Select the max number of players you wish to allow to join"));
    label_host_battle_maxUnitsData_copy->SetMinSize(wxSize(30, 17));
    label_host_server_maxUnits->SetMinSize(wxSize(77, 25));
    text_host_server_maxUnitsData->SetMinSize(wxSize(150, 25));
    text_host_server_maxUnitsData->SetToolTip(wxT("Enter the max units per player"));
    label_host_server_startEnergy->SetMinSize(wxSize(77, 25));
    text_host_server_startEnergyData->SetMinSize(wxSize(150, 25));
    text_host_server_startEnergyData->SetToolTip(wxT("Enter the starting energy for every player"));
    label_host_server_startMetal->SetMinSize(wxSize(77, 17));
    text_host_server_startMetalData->SetMinSize(wxSize(150, 25));
    text_host_server_startMetalData->SetToolTip(wxT("Enter the starting metal for each player"));
    button_host_server_ok->SetDefault();
    button_host_server_testHost->SetToolTip(wxT("Test your configuration to see whether you can host a battle or not"));
    choice_host_map_mapData->SetMinSize(wxSize(167, 25));
    choice_host_map_mapData->SetSelection(0);
    text_host_map_description->SetMinSize(wxSize(200, 115));
    // end wxGlade
}


void gui_host::do_layout()
{
    // begin wxGlade: gui_host::do_layout
    wxFlexGridSizer* grid_host_main = new wxFlexGridSizer(3, 5, 0, 0);
    wxFlexGridSizer* grid_host_map = new wxFlexGridSizer(17, 1, 0, 0);
    wxFlexGridSizer* grid_host_mapSettings = new wxFlexGridSizer(3, 1, 0, 0);
    wxBoxSizer* sizer_host_map_description = new wxBoxSizer(wxVERTICAL);
    wxFlexGridSizer* grid_host_server = new wxFlexGridSizer(24, 1, 0, 0);
    wxBoxSizer* sizer_host_battle_buttons = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_startMetal = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_startEnergy = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_maxUnits = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_maxPlayers = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_lanGame = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_private = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_port = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_modType = new wxBoxSizer(wxHORIZONTAL);
    wxBoxSizer* sizer_host_server_name = new wxBoxSizer(wxHORIZONTAL);
    grid_host_main->Add(10, 10, 0, 0, 0);
    grid_host_main->Add(200, 10, 0, 0, 0);
    grid_host_main->Add(10, 10, 0, 0, 0);
    grid_host_main->Add(150, 10, 0, 0, 0);
    grid_host_main->Add(10, 10, 0, 0, 0);
    grid_host_main->Add(10, 300, 0, 0, 0);
    sizer_host_server_name->Add(label_host_server_name, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_name->Add(text_host_server_nameData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_name, 1, 0, 0);
    grid_host_server->Add(200, 5, 0, 0, 0);
    sizer_host_server_modType->Add(label_host_server_modType, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_modType->Add(15, 20, 0, 0, 0);
    sizer_host_server_modType->Add(choice_host_server_modData, 0, wxALIGN_CENTER_HORIZONTAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_modType, 1, 0, 0);
    grid_host_server->Add(200, 5, 0, 0, 0);
    sizer_host_server_port->Add(label_host_server_port, 0, wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_port->Add(15, 20, 0, 0, 0);
    sizer_host_server_port->Add(text_host_server_portData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_port, 1, 0, 0);
    grid_host_server->Add(200, 20, 0, 0, 0);
    sizer_host_server_private->Add(15, 20, 0, 0, 0);
    sizer_host_server_private->Add(checkbox_host_server_privateGameData, 0, 0, 0);
    grid_host_server->Add(sizer_host_server_private, 1, 0, 0);
    sizer_host_server_lanGame->Add(15, 20, 0, 0, 0);
    sizer_host_server_lanGame->Add(checkbox_host_server_lanGameData, 0, wxEXPAND, 0);
    grid_host_server->Add(sizer_host_server_lanGame, 1, 0, 0);
    grid_host_server->Add(200, 20, 0, 0, 0);
    sizer_host_server_maxPlayers->Add(label_host_server_maxPlayers, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_maxPlayers->Add(15, 20, 0, 0, 0);
    sizer_host_server_maxPlayers->Add(slider_host_server_maxPlayersData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_maxPlayers->Add(label_host_battle_maxUnitsData_copy, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_host_server->Add(sizer_host_server_maxPlayers, 1, 0, 0);
    grid_host_server->Add(200, 5, 0, 0, 0);
    sizer_host_server_maxUnits->Add(label_host_server_maxUnits, 0, wxFIXED_MINSIZE, 0);
    sizer_host_server_maxUnits->Add(15, 20, 0, 0, 0);
    sizer_host_server_maxUnits->Add(text_host_server_maxUnitsData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_maxUnits, 1, 0, 0);
    grid_host_server->Add(200, 5, 0, 0, 0);
    sizer_host_server_startEnergy->Add(label_host_server_startEnergy, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_startEnergy->Add(15, 20, 0, 0, 0);
    sizer_host_server_startEnergy->Add(text_host_server_startEnergyData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_startEnergy, 1, 0, 0);
    grid_host_server->Add(200, 5, 0, 0, 0);
    sizer_host_server_startMetal->Add(label_host_server_startMetal, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    sizer_host_server_startMetal->Add(15, 20, 0, 0, 0);
    sizer_host_server_startMetal->Add(text_host_server_startMetalData, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxFIXED_MINSIZE, 0);
    grid_host_server->Add(sizer_host_server_startMetal, 1, 0, 0);
    grid_host_server->Add(200, 10, 0, 0, 0);
    sizer_host_battle_buttons->Add(button_host_server_ok, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_host_battle_buttons->Add(button_host_server_cancel, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    sizer_host_battle_buttons->Add(button_host_server_testHost, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_host_server->Add(sizer_host_battle_buttons, 1, 0, 0);
    grid_host_main->Add(grid_host_server, 1, wxALL|wxEXPAND, 1);
    grid_host_main->Add(10, 300, 0, 0, 0);
    grid_host_map->Add(bitmap_host_map_preview, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 0);
    grid_host_map->Add(135, 15, 0, 0, 0);
    grid_host_map->Add(choice_host_map_mapData, 0, wxEXPAND|wxALIGN_CENTER_HORIZONTAL, 0);
    grid_host_map->Add(100, 15, 0, 0, 0);
    sizer_host_map_description->Add(label_host_map_description_copy_2_copy_copy, 0, 0, 0);
    sizer_host_map_description->Add(text_host_map_description, 0, wxALL|wxFIXED_MINSIZE, 1);
    grid_host_mapSettings->Add(sizer_host_map_description, 1, wxEXPAND|wxALIGN_CENTER_HORIZONTAL, 0);
    grid_host_map->Add(grid_host_mapSettings, 1, wxEXPAND, 0);
    grid_host_main->Add(grid_host_map, 1, wxALL|wxEXPAND|wxALIGN_CENTER_HORIZONTAL, 1);
    grid_host_main->Add(10, 300, 0, wxALIGN_CENTER_VERTICAL, 0);
    grid_host_main->Add(10, 10, 0, 0, 0);
    grid_host_main->Add(200, 10, 0, 0, 0);
    grid_host_main->Add(10, 10, 0, 0, 0);
    grid_host_main->Add(150, 10, 0, 0, 0);
    grid_host_main->Add(10, 10, 0, 0, 0);
    SetAutoLayout(true);
    SetSizer(grid_host_main);
    grid_host_main->Fit(this);
    grid_host_main->SetSizeHints(this);
    Layout();
    Centre();
    // end wxGlade
}

