/*
 * CPlayerTablePanel.java
 *
 * Created on 01 February 2008, 22:13
 */

package aflobby.UI;

import aflobby.CPlayer;
import aflobby.CPlayerDataWindow;
import aflobby.LMain;
import aflobby.helpers.AlphanumComparator;
import java.util.ArrayList;
import java.util.regex.PatternSyntaxException;
import javax.swing.RowFilter;
import javax.swing.SwingUtilities;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author  tarendai-std
 */
public class CPlayerTablePanel extends javax.swing.JPanel {
    
    CPlayerTableModel usertablemodel = null;
    TableRowSorter<CPlayerTableModel> playertablesorter = null;
    ArrayList<CPlayer> players = new ArrayList<CPlayer>();
    public LMain LM;
    
    /** Creates new form CPlayerTablePanel
     * @param LM 
     */
    public CPlayerTablePanel(LMain LM) {
        this.LM = LM;
        Runnable doWorkRunnable = new Runnable() {

                public void run() {

                    usertablemodel = new CPlayerTableModel();
                    for(CPlayer p : players){
                        usertablemodel.AddPlayer(p);
                    }

                    playertablesorter = new TableRowSorter<CPlayerTableModel>(usertablemodel);
                    playertablesorter.setComparator(3, new AlphanumComparator());

                    initComponents();
                }
        };
        SwingUtilities.invokeLater(doWorkRunnable);

    }
    
    public CPlayerTablePanel() {
        Runnable doWorkRunnable = new Runnable() {

                public void run() {

                    usertablemodel = new CPlayerTableModel();
                    for(CPlayer p : players){
                        usertablemodel.AddPlayer(p);
                    }
                    UpdateCountLabel();

                    playertablesorter = new TableRowSorter<CPlayerTableModel>(usertablemodel);
                    playertablesorter.setComparator(3, new AlphanumComparator());
                }
        };
        SwingUtilities.invokeLater(doWorkRunnable);
        
        Runnable doWorkRunnable1 = new Runnable() {

                public void run() {
                    initComponents();
                }
        };
        SwingUtilities.invokeLater(doWorkRunnable1);
        
        Runnable doWorkRunnable2 = new Runnable() {

                public void run() {
                    TableColumnModel c = UserTable.getColumnModel();
                    c.getColumn(0).setMaxWidth(28);
                    c.getColumn(1).setMaxWidth(28);
                    c.getColumn(2).setMaxWidth(28);
                    c.getColumn(4).setMaxWidth(40);
                }
        };
        SwingUtilities.invokeLater(doWorkRunnable2);

    }
    
    /**
     * 
     * @param p
     */
    public void AddPlayer(final CPlayer p){
        //
        players.add(p);
        if(usertablemodel != null){
            usertablemodel.AddPlayer(p);
            UpdateCountLabel();
        }
    }
    
    /**
     * 
     * @param p
     */
    public void RemovePlayer(final CPlayer p){
        players.add(p);
        if(usertablemodel != null){
            usertablemodel.RemovePlayer(p);
            UpdateCountLabel();
        }
    }
    
    /**
     * 
     */
    public void ClearPlayers(){
        if(usertablemodel != null) {
            usertablemodel.clear();
            UpdateCountLabel();
        }
        players.clear();
    }

    
    public int PlayerCount(){
        return usertablemodel.getRowCount();
    }
    
    public void UpdateCountLabel(){
        Runnable doWorkRunnable2 = new Runnable() {

                public void run() {
                    countLabel.setText(PlayerCount()+" players listed");
                }
        };
        SwingUtilities.invokeLater(doWorkRunnable2);
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        UserSearch = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        UserTable = new javax.swing.JTable();
        countLabel = new javax.swing.JLabel();

        UserSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                UserSearchKeyTyped(evt);
            }
        });

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(jLabel4.getFont().deriveFont(jLabel4.getFont().getSize()+1f));
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("aflobby/languages"); // NOI18N
        jLabel4.setText(bundle.getString("CChannelView.jLabel4.text")); // NOI18N

        UserTable.setModel(usertablemodel);
        UserTable.setRowSorter(playertablesorter);
        UserTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                UserTableMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(UserTable);

        countLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        countLabel.setText("players listed");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(UserSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 386, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(countLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 483, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UserSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(countLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void UserSearchKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_UserSearchKeyTyped
        Runnable doWorkRunnable = new Runnable() {
            public void run() {
                try {
                    playertablesorter.setRowFilter(
                            RowFilter.regexFilter(UserSearch.getText()));
                } catch (PatternSyntaxException pse) {
                    //System.err.println("Bad regex pattern");
                }
            }
        };
        SwingUtilities.invokeLater(doWorkRunnable);
    }//GEN-LAST:event_UserSearchKeyTyped

    private void UserTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_UserTableMousePressed
        if (evt.getClickCount() > 1) {
            String n = (String) UserTable.getValueAt(UserTable.getSelectedRow(), 3);
            
            CPlayer cp = LM.playermanager.GetPlayer(n);
            if(cp == null){
                return;
            }
            
            aflobby.CPlayerDataWindow p = new CPlayerDataWindow(LM, cp);
            p.setVisible(true);
        }
    }//GEN-LAST:event_UserTableMousePressed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField UserSearch;
    private javax.swing.JTable UserTable;
    private javax.swing.JLabel countLabel;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane3;
    // End of variables declaration//GEN-END:variables
    
}
